@inherits LayoutComponentBase
@inject IJwtStateProviderService AuthStateProvider
@inject NavigationManager NavManager

<AuthorizeView>
    <Authorized>
        <div class="page">
            <div class="sidebar">
                <NavMenu />
            </div>

            <div class="w-100">
                <div class="top-row">
                    <div class="mx-3">Hello, @_currentUser</div>
                    <button type="button" @onclick="@LogoutUser" class="btn btn-outline-primary">Log out</button>
                </div>

                <main>
                    <article class="h-100 px-4">
                        @Body
                    </article>
                </main>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <main>
            <article class="content px-4">
                @Body
            </article>
        </main>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> _authenticationState { get; set; }

    private string? _currentUser;

    protected override async Task OnInitializedAsync()
    {
        var user = (await _authenticationState).User;

        if ((user?.Identity?.IsAuthenticated).IsTrue())
            _currentUser = user.GetNameFromClaimsPrincipal() ?? "User";
    }

    private void LogoutUser()
    {
        AuthStateProvider.NotifyUserLogout();
        NavManager.NavigateTo(Routes.LOGIN, true);
    }
}